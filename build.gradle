plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
}

allure {
    report {
        version.set("2.17.3") //версия Allure Report (https://github.com/allure-framework/allure2)
    }
    adapter {
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set("2.17.3") //версия Allure JUnit5 (https://github.com/allure-framework/allure-java)
            }
        }
    }
}

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:7.5.1',
            'org.junit.jupiter:junit-jupiter:5.10.0',
            'org.slf4j:slf4j-simple:2.0.7',
            'com.github.javafaker:javafaker:1.0.2',
            'org.apache.logging.log4j:log4j-core:2.20.0',
            'io.qameta.allure:allure-selenide:2.29.0',
            'io.github.bonigarcia:webdrivermanager:5.9.2',
            'org.aeonbits.owner:owner:1.0.4',
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.8.2')
}


tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task demoqa_test(type: Test) {
    useJUnitPlatform {
        includeTags("demoqa")
    }
}

sourceSets {
    test {
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}